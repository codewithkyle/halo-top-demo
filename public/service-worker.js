let e="resources-initial",t="content-initial";function c(e,t,c){clients=self.clients.matchAll().then(s=>{s.map(s=>{"visible"===s.visibilityState&&s.url===c&&s.postMessage({type:"cachebust",max:parseInt(e),contentCacheExpires:parseInt(t)})})})}self.addEventListener("fetch",c=>{if(c.request.url.match(new RegExp(/(\/webmaster\/)|(\/cpresources\/)|(index\.php)|(cachebust\.js)|(\/pwa\/)|(\.json)$/gi))||"GET"!==c.request.method)c.respondWith(fetch(c.request).then(e=>e));else{const s=c.request.url.match(/(\.js)$|(\.css)$/gi)?e:t;c.respondWith(caches.match(c.request).then(e=>e||fetch(c.request).then(e=>{if(!e||200!==e.status||"basic"!==e.type||"no-cache"===e.headers.get("PWA-Cache"))return e;var t=e.clone();return caches.open(s).then(e=>{e.put(c.request,t)}),e})))}}),self.addEventListener("message",s=>{const{type:a}=s.data;switch(a){case"cachebust":!async function(s){const a=await fetch("/resources-cachebust.json",{cache:"no-cache",credentials:"include",headers:new Headers({Accept:"application/json"})});if(a.ok){const t=await a.json();e=`resources-${t.cacheTimestamp}`,caches.keys().then(t=>Promise.all(t.map(t=>{if(new RegExp(/resources/i).test(t)&&t!==e)return caches.delete(t)})))}const n=await fetch("/pwa/cachebust.json",{cache:"no-cache",credentials:"include",headers:new Headers({Accept:"application/json"})});if(n.ok){const e=await n.json();t=`content-${e.cacheTimestamp}`,caches.keys().then(e=>Promise.all(e.map(e=>{if(new RegExp(/content/i).test(e)&&e!==t)return caches.delete(e)}))),c(e.maximumContentPrompts,e.contentCacheDuration,s)}else"content-initial"===t&&(t=`content-${Date.now()}`,caches.keys().then(e=>Promise.all(e.map(e=>{if(new RegExp(/content/i).test(e)&&e!==t)return caches.delete(e)})))),c(4,7,s)}(s.data.url);break;case"page-refresh":!async function(e,c){try{const s=new Request(e);await new Promise(e=>{caches.open(t).then(t=>{t.delete(s).then(()=>{e()})})}),"4g"===c&&await new Promise(c=>{fetch(e,{credentials:"include"}).then(e=>{e&&200===e.status&&"basic"===e.type||c(),caches.open(t).then(t=>{t.put(s,e),c()})})}),(await self.clients.matchAll()).map(t=>{"visible"===t.visibilityState&&t.url===e&&t.postMessage({type:"page-refresh"})})}catch(e){}}(s.data.url,s.data.network);break;case"clear-content-cache":caches.keys().then(e=>Promise.all(e.map(e=>{if(e.match("content"))return caches.delete(e)})))}});